{"version":3,"sources":["data.js","logo.svg","TimeLine.jsx","images/userImg.png","SideNavbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Object","defineProperty","exports","value","projectData","TaskID","TaskName","StartDate","Date","EndDate","subtasks","Duration","Progress","Predeceesor","TimeLine","id","BarChartOutlined","EnvironmentOutlined","RiseOutlined","class","DownOutlined","DownCircleOutlined","dataSource","taskFields","name","startDate","endDate","duration","progress","child","dependency","field","headerText","className","format","textAlign","SideNavbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","onClick","MenuOutlined","src","userImg","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1416082.chunk.js","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.projectData = [\r\n    {\r\n        TaskID: 1,\r\n        TaskName: 'Project Initiation',\r\n        StartDate: new Date('04/02/2020'),\r\n        EndDate: new Date('04/21/2020'),\r\n        subtasks: [\r\n            { TaskID: 2, TaskName: 'Identify Site location', StartDate: new Date('04/06/2020'), Duration: 4, Progress: 50 },\r\n            { TaskID: 3, TaskName: 'Perform Soil test', StartDate: new Date('04/10/2020'), Duration: 4, Progress: 50, Predeceesor:\"2FS\" },\r\n            { TaskID: 4, TaskName: 'Soil test approval', StartDate: new Date('04/12/2020'), Duration: 4, Progress: 50 },\r\n        ]\r\n    },\r\n    {\r\n        TaskID: 5,\r\n        TaskName: 'Project Estimation',\r\n        StartDate: new Date('04/02/2020'),\r\n        EndDate: new Date('04/21/2020'),\r\n        subtasks: [\r\n            { TaskID: 6, TaskName: 'Develop floor plan for estimation', StartDate: new Date('04/03/2020'), Duration: 3, Progress: 50 },\r\n            { TaskID: 7, TaskName: 'List materials', StartDate: new Date('04/04/2020'), Duration: 3, Progress: 50 },\r\n            { TaskID: 8, TaskName: 'Estimation approval', StartDate: new Date('04/08/2020'), Duration: 3, Progress: 50 }\r\n        ]\r\n    },\r\n];","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport \"./TimeLine.css\";\r\nimport { BarChartOutlined } from \"@ant-design/icons\";\r\nimport { EnvironmentOutlined, DollarCircleOutlined, DownCircleOutlined } from \"@ant-design/icons\";\r\nimport { RiseOutlined } from \"@ant-design/icons\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { MonitorOutlined } from \"@ant-design/icons\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Table, Tag, Space } from \"antd\";\r\n\r\nimport { GanttComponent, TaskFieldsModel, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-gantt';\r\nimport { projectData } from './data';\r\n\r\nconst TimeLine = () => {\r\n\r\n\r\n  const taskValues = {\r\n    id: \"TaskID\",\r\n    name: \"TaskName\",\r\n    startDate: \"StartDate\",\r\n    endDate: \"EndDate\",\r\n    duration: \"Duration\",\r\n    progress: \"Progress\",\r\n    child: \"subtasks\",\r\n    dependency: \"Predeceesor\"\r\n  }\r\n    return (\r\n        <div>\r\n\r\n<div id=\"TimeLineTop\">\r\n        <p id=\"menuTableTL\">\r\n          {\" \"}\r\n          <BarChartOutlined /> Main Table\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <EnvironmentOutlined />\r\n          Map\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <RiseOutlined /> Timeline\r\n        </p>\r\n      </div>\r\n      <hr id=\"ganttTopHeightTL\" />\r\n\r\n      <div id=\"ganttSecondTableTL\">\r\n        <div class=\"dropdown\">\r\n          <span id=\"dropDownBtn\">\r\n            New Item <DownOutlined />\r\n          </span>\r\n          <div class=\"dropdown-content\">\r\n            <p>Hello World!</p>\r\n          </div>\r\n        </div>\r\n        <p id=\"ganttsearch\">Search</p>\r\n        <p id=\"ganttPerson\">Person </p>\r\n        <p id=\"ganttFilter\">Filter <DownOutlined /></p>\r\n      </div>\r\n      <div id=\"ganttMainTables\">\r\n        <div id=\"initiationTable\">\r\n            <h1> <DownCircleOutlined id=\"initiationIcon\"/>Initiation</h1>\r\n           \r\n        </div>\r\n      </div>\r\n      {/* <div id=\"timeLineTable\"> */}\r\n      <GanttComponent dataSource={projectData}\r\n      taskFields={taskValues}>\r\n        <ColumnsDirective>\r\n          <ColumnDirective field=\"TaskID\" headerText=\"ID\" className=\"ganttData\"></ColumnDirective>\r\n          <ColumnDirective field=\"TaskName\" headerText=\"Name\" className=\"ganttData\"></ColumnDirective>\r\n          <ColumnDirective field=\"StartDate\" format=\"dd-MMM-yy\" className=\"ganttData\"></ColumnDirective>\r\n          <ColumnDirective field=\"Duration\" textAlign=\"Right\" className=\"ganttData\"></ColumnDirective>\r\n        </ColumnsDirective>\r\n      </GanttComponent>\r\n      {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeLine\r\n","export default __webpack_public_path__ + \"static/media/userImg.77349eb5.png\";","import React, {useState, useEffect} from \"react\";\r\nimport \"./SideNavbar.css\";\r\nimport userImg from \"./images/userImg.png\";\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport {MenuOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\nconst SideNavbar = () =>{\r\n\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n\r\n  return (\r\n    <div id=\"sideNavbody\">\r\n    <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)} id=\"navbtn\"><MenuOutlined /></Button>\r\n    {activeMenu && (\r\n      <div id=\"sideNav\">\r\n        <div id=\"userDetailSec\">\r\n          <img src={userImg} id=\"userImg\"></img>\r\n          <h1 id=\"userName\">Shubham Joshi</h1>\r\n        </div>\r\n        <div>\r\n<input id=\"navSerachBar\" placeholder=\"Search\"></input>\r\n\r\n      </div>\r\n      <div id=\"sideNavList\">\r\n      <p id=\"sideNavList1\">My Project</p>\r\n      <p id=\"sideNavList2\">My Task</p>\r\n      <p id=\"sideNavList3\">Book Deliveries</p>\r\n      \r\n      </div>\r\n      </div>\r\n      \r\n    )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavbar;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport UserDash from \"./UserDash\";\nimport Gantt from \"./Gantt\";\nimport TimeLine from \"./TimeLine.jsx\"\n\n\nimport SideNavbar from \"./SideNavbar\";\n\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"NavbarSection\">\n          <SideNavbar />\n        </div>\n        <div className=\"main\">\n          {/* <Gantt /> */}\n          <TimeLine />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}